AWSTemplateFormatVersion: "2010-09-09"
Parameters:
  SshIpAddressRange:
    Type: String
  KeyName:
    Type: String

Resources:
  VPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: 10.0.0.0/16
      Tags:
        - Key: Type
          Value: minecraft
        - Key: Name
          Value: vpc-minecraft

  IGW:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
        - Key: Type
          Value: minecraft
        - Key: Name
          Value: igw-minecraft

  AttachIGW:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      VpcId: !Ref VPC
      InternetGatewayId: !Ref IGW

  PublicSubnet:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone: ap-northeast-1a
      VpcId: !Ref VPC
      CidrBlock: 10.0.1.0/24
      Tags:
        - Key: Type
          Value: minecraft
        - Key: Name
          Value: public-subnet-minecraft

  PublicSubnetRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPC
      Tags:
        - Key: Type
          Value: minecraft
        - Key: Name
          Value: public-subnet-routetable-minecraft

  InternetRouteForPublicSubnetRouteTable:
    Type: AWS::EC2::Route
    DependsOn:
      - AttachIGW
    Properties:
      RouteTableId: !Ref PublicSubnetRouteTable
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref IGW

  AssociatePublicSubnetRouteTable:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref PublicSubnet
      RouteTableId: !Ref PublicSubnetRouteTable

  EBS:
    Type: AWS::EC2::Volume
    Properties:
      Size: "8"
      AvailabilityZone: "ap-northeast-1a"
      Tags:
        - Key: Type
          Value: minecraft
        - Key: Name
          Value: ebs-minecraft

  EC2:
    Type: AWS::EC2::Instance
    Properties:
      ImageId: ami-0df99b3a8349462c6 # UbuntuServer 20.04 x86
      KeyName: !Ref KeyName
      InstanceType: t2.small
      NetworkInterfaces:
        - AssociatePublicIpAddress: "true"
          DeviceIndex: "0"
          SubnetId: !Ref PublicSubnet
          GroupSet:
            - !Ref SecurityGroup
      UserData: !Base64 |
        #!/bin/bash
        mkdir -p /data
        mkfs -t ext4 /dev/xvdf
        echo "/dev/xvdf	/data	ext4	defaults,nofail	0	2" >> /etc/fstab
        mount -a

        apt update
        apt-get -y install openjdk-8-jdk-headless screen

        wget https://launcher.mojang.com/v1/objects/1b557e7b033b583cd9f66746b7a9ab1ec1673ced/server.jar

        BASE_DIR=/opt/minecraft/server

        mkdir -p "${BASE_DIR}"
        mv server.jar "${BASE_DIR}/minecraft_server.1.16.5.jar"

        cd "${BASE_DIR}"
        java -jar "minecraft_server.1.16.5.jar" --nogui
        sed -i s/eula=false/eula=true/g eula.txt

        echo "#!/bin/bash" > "${BASE_DIR}/start.sh"
        echo """
        java -Xms1G -Xmx1G -jar ${BASE_DIR}/minecraft_server.1.16.5.jar --nogui
        """ >> "${BASE_DIR}/start.sh"
        chmod +x "${BASE_DIR}/start.sh"

        echo """
        [Unit]
        Description=Minecraft Server Service
        After=network.target

        [Service]
        Type=forking
        User=root
        Group=root
        WorkingDirectory=${BASE_DIR}
        ExecStart=${BASE_DIR}/start.sh
        # ExecStop=${BASE_DIR}/stop.sh
        Restart=always
        TimeoutStartSec=300

        [Install]
        WantedBy=multi-user.target
        """ > /usr/lib/systemd/system/minecraft.service

        systemctl daemon-reload
        systemctl enable minecraft
        systemctl start minecraft
      Tags:
        - Key: Type
          Value: minecraft
        - Key: Name
          Value: ec2-minecraft

  AttachEBS:
    Type: AWS::EC2::VolumeAttachment
    Properties:
      InstanceId: !Ref EC2
      VolumeId: !Ref EBS
      Device: /dev/sdf

  DlmLifecyclePolicy:
    Type: AWS::DLM::LifecyclePolicy
    Properties:
      State: ENABLED
      Description: Minecraft Snapshot Lifecycle
      ExecutionRoleArn:
        !Join
          - ''
          - - 'arn:aws:iam::'
            - !Ref 'AWS::AccountId'
            - ':role/service-role/AWSDataLifecycleManagerDefaultRole'
      PolicyDetails:
        ResourceTypes:
          - VOLUME
        TargetTags:
          - Key: Name
            Value: ebs-minecraft
        Schedules:
          - Name: Minecraft Snapshot Every 12 Hours
            CreateRule:
              Interval: 12
              IntervalUnit: HOURS
              Times:
                - '16:00'
            RetainRule:
              Count: 7
            CopyTags: true

  SecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupName: minecraft-sg
      GroupDescription: Allow SSH and Minecraft Default Port
      VpcId: !Ref VPC
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 25565
          ToPort: 25565
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          CidrIp: !Ref SshIpAddressRange

  EIP:
    Type: "AWS::EC2::EIP"
    Properties:
      Domain: vpc
      Tags:
        - Key: Type
          Value: minecraft
        - Key: Name
          Value: eip-minecraft

  AssociateEIP:
    Type: AWS::EC2::EIPAssociation
    Properties:
      InstanceId: !Ref EC2
      EIP: !Ref EIP

  Route53RecordSet:
    Type: "AWS::Route53::RecordSet"
    Properties:
      Name: minecraft.takamoto.dev
      Type: A
      TTL: '900'
      HostedZoneId: Z08348221VRCAVEWA569X # takamot.dev
      ResourceRecords:
        - !Ref EIP
